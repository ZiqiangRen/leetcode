############ recursion TLE
class Solution(object):
    def minFlipsMonoIncr(self, S):
        """
        :type S: str
        :rtype: int
        """
        i = 0
        if S[0]=='0':
            i = 1
            while i<len(S) and S[i]=='0':
                i += 1
            if i==len(S):
                return 0
            else:
                flipto1 = i + S[i+1:].count('0')
                flipto0 = self.minFlipsMonoIncr(S[i:])
                return min(flipto1,flipto0)
        else:
            i = 1
            while i<len(S) and S[i]=='1':
                i += 1
            if i==len(S):
                return 0
            else:
                flipto1 = S[i:].count('0')
                flipto0 = i + self.minFlipsMonoIncr(S[i:])  # S[i]=='0'
                return min(flipto1,flipto0) 
